package com.hornnes.bookdetails.controllers.restAPI;

import com.hornnes.bookdetails.model.Book;
import com.hornnes.bookdetails.repository.AuthorRepository;
import com.hornnes.bookdetails.repository.BookRepository;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

@Controller // This means that this class is a Controller
@RequestMapping(path="/library")
public class RestController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private BookRepository bookRepository;
    @Autowired
    private AuthorRepository authorRepository;

    // For Rest-api
    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUser (
            @RequestParam String name,
            @RequestParam Integer author,
            @RequestParam Double userRating,
            @RequestParam Integer reviews,
            @RequestParam Integer price,
            @RequestParam String year,
            @RequestParam String genre) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        Book book = new Book();
        book.setName(name);
        book.setAuthor(author);
        book.setUserRating(userRating);
        book.setReviews(reviews);
        book.setPrice(price);
        book.setYear(year);
        book.setGenre(genre);
        bookRepository.save(book);
        return "Book successfully added";
    }

    @GetMapping(path="/allBooks")
    public @ResponseBody Iterable<Book> getAllBooks() {
        // This returns a JSON or XML with the users
        return bookRepository.findAll();
    }
}